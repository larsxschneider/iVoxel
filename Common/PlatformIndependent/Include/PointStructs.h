/*
 *  Points.h
 *  MacApp
 *
 *  Created by Lars Schneider on 11.08.10.
 *  Copyright 2010 Lars Schneider. All rights reserved.
 *
 */


#ifndef POINT_STRUCTS_H
#define POINT_STRUCTS_H


namespace WVSClientCommon
{


typedef struct
{
	uint8_t red;
    uint8_t green;
	uint8_t blue;
} RGBColor;


/**
	WVSPoints are generated by the WVSCodec and consumed by the Octree
 */
typedef struct WVSPoint
{
	VECTOR3 position;
	float_t radius;
	uint8_t normalIndex;
	RGBColor color;
};



/**
	QuantPoints are used in the Octree internally (plus they are swapped to backing store)
 */
typedef struct QuantPoint
{
	typedef uint16_t PositionNormal;			//  9bit position + 7bit normal
	typedef uint16_t ColorNative;				// 15bit color    + 1bit native

	PositionNormal	positionNormal;				// zzzyyyxxxnnnnnnn
	ColorNative		colorNative;				// nbbbbbgggggrrrrr
	
	inline const bool isNative() const
	{
		static const uint16_t nativeMask = (1 << 15);
		return (colorNative & nativeMask);
	}
	
	inline const uint16_t getPosition() const
	{
		static const uint16_t positionMask = (1 << 16) - (1 << 7);
		return (positionNormal & positionMask);
	}
};


/**
	GPUPoints are generated by the Octree and consumed by the GPU
 */
typedef struct GPUPoint
{
		uint32_t	cellPositionNormalColor;	// *bbbbbggg|ggrrrrr|zzzyyyxx|xnnnnnnn
		uint32_t	nodePositionLevel;			// LLLLLZZZ|ZZZZZZYY|YYYYYYYX|XXXXXXXX
};


}

#endif // POINT_STRUCTS_H